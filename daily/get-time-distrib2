#!/usr/bin/perl

if ($ARGV[0] eq "-p") {
	$plot = 1;
	shift (@ARGV);
}

$baseline = 16.75;  # 16:45-17:00
$baseline2 = 7.75;  # 07:45-08:00

while (<>) {
	($id, $name, $id2, $date, $time, @fields) = split(/,/);

	if ($time =~ /^(..):(..) *- *(..):(..)$/) {
		$time = $1 + $2 / 60;
		$time2 = $3 + $4 / 60;
	} else {
		if (!$seen{$time}) {
			print STDERR "don't know what to do with time $time\n";
		}
		$seen{$time} = 1;
		next;
	}

	$key = "$id,$name,$id2,$date";

	if ($key ne $okey) {
		for $n (sort { $a <=> $b } keys(%walk)) {
			if ($walk{$n} > 0) {
				if ($walk{$baseline} != 0) {
					$walksum{$n} += log($walk{$n} / $walk{$baseline});
					$walkcount{$n} += 1;
				} elsif ($walk{$baseline2} != 0) {
					$walksum2{$n} += log($walk{$n} / $walk{$baseline2});
					$walkcount2{$n} += 1;
				}
			}
		}

		for $n (sort { $a <=> $b } keys(%drive)) {
			if ($drive{$n} > 0) {
				if ($drive{$baseline} != 0) {
					$drivesum{$n} += log($drive{$n} / $drive{$baseline});
					$drivecount{$n} += 1;
				} elsif ($drive{$baseline2} != 0) {
					$drivesum2{$n} += log($drive{$n} / $drive{$baseline2});
					$drivecount2{$n} += 1;
				}
			}
		}

		for $n (sort { $a <=> $b } keys(%bike)) {
			if ($bike{$n} > 0) {
				if ($bike{$baseline} != 0) {
					$bikesum{$n} += log($bike{$n} / $bike{$baseline});
					$bikecount{$n} += 1;
				} elsif ($bike{$baseline2} != 0) {
					$bikesum2{$n} += log($bike{$n} / $bike{$baseline2});
					$bikecount2{$n} += 1;
				}
			}
		}

		%walk = ();
		%drive = ();
		%bike = ();
		$okey = $key;
	}

	if ($time2 == $time + .25) {
		$walk = $fields[12] + $fields[13] + $fields[14] + $fields[15];
		$walk{$time} = $walk;

		$bike = $fields[16] + $fields[17] + $fields[18] + $fields[19];
		$bike{$time} = $bike;

		$drive{$time} = 0;
		for ($i = 0; $i < 12; $i++) {
			$drive{$time} += $fields[$i];
		}
	}
}

$walktotal = 0;
$drivetotal = 0;
$biketotal = 0;

$walkscale2 = exp($walksum{$baseline2} / $walkcount{$baseline2});
$drivescale2 = exp($drivesum{$baseline2} / $drivecount{$baseline2});
$bikescale2 = exp($bikesum{$baseline2} / $bikecount{$baseline2});

for ($i = 0; $i < 24; $i++) {
	for ($j = $i; $j < $i + 1; $j += .25) {
		$walkscale{$j} = exp(($walksum{$j} + $walksum2{$j} * $walkscale2) / ($walkcount{$j} + $walkcount2{$j}));
		$drivescale{$j} = exp(($drivesum{$j} + $drivesum2{$j} * $drivescale2) / ($drivecount{$j} + $drivecount2{$j}));
		if ($bikecount{$j} + $bikecount2{$j} > 10) {
			$bikescale{$j} = exp(($bikesum{$j} + $bikesum2{$j} * $bikescale2) / ($bikecount{$j} + $bikecount2{$j}));
		} else {
			$bikescale{$j} = exp((log($walkscale{$j}) + log($drivescale{$j})) / 2);
			$bikefake{$j} = 1;
		}

		$walktotal += $walkscale{$j};
		$drivetotal += $drivescale{$j};
		$biketotal += $bikescale{$j};
	}
}

if (!$plot) {
	print "\@walk_scale = (\n";
	for ($i = 0; $i < 24; $i++) {
		print "\t";
		for ($j = $i; $j < $i + 1; $j += .25) {
			printf("%.6f, ", $walkscale{$j});
		}
		print "\n";
	}
	print ");\n\n";

	print "\@drive_scale = (\n";
	for ($i = 0; $i < 24; $i++) {
		print "\t";
		for ($j = $i; $j < $i + 1; $j += .25) {
			printf("%.6f, ", $drivescale{$j});
		}
		print "\n";
	}
	print ");\n\n";

	print "\@bike_scale = (\n";
	for ($i = 0; $i < 24; $i++) {
		print "\t";
		for ($j = $i; $j < $i + 1; $j += .25) {
			printf("%.6f, ", $bikescale{$j});
		}
		print "\n";
	}
	print ");\n\n";
} else {
	# * 4 because the width of each column is 15 minutes but the horizontal unit is hours

	for $n (sort { $a <=> $b } keys(%walkscale)) {
		$xn = $n;
		if ($n < 4) {
			$xn += 24;
		}
		$xn += 0.125; # 7.5 minute offset to center each count within its 15 minutes

		if ($bikefake{$n}) {
			printf("%s %.6f %.6f - %d %d %d\n", $xn, $walkscale{$n} / $walktotal * 4, $drivescale{$n} / $drivetotal * 4, $walkcount{$n} + $walkcount2{$n}, $drivecount{$n} + $drivecount2{$n}, $bikecount{$n} + $bikecount2{$n});
		} else {
			printf("%s %.6f %.6f %.6f %d %d %d\n", $xn, $walkscale{$n} / $walktotal * 4, $drivescale{$n} / $drivetotal * 4, $bikescale{$n} / $biketotal * 4, $walkcount{$n} + $walkcount2{$n}, $drivecount{$n} + $drivecount2{$n}, $bikecount{$n} + $bikecount2{$n});
		}
	}
}
