#!/usr/bin/perl

$baseline = 16.75;  # 16:45-17:00
$morning = 10.5;    # 10:30-10:45

srand(0);

while (<>) {
	($id, $name, $id2, $date, $time, @fields) = split(/,/);

	$key = "$id,$name,$id2,$date";

	if ($key ne $okey) {
		if ($walk{$baseline} != 0 && $walk{$morning} != 0) {
			for $n (sort { $a <=> $b } keys(%walk)) {
				push @{$walks{$n}}, ($walk{$n} - .5 + rand(1)) / $walk{$baseline};
			}
		}

		if ($drive{$baseline} != 0 && $drive{$morning} != 0) {
			for $n (sort { $a <=> $b } keys(%drive)) {
				push @{$drives{$n}}, ($drive{$n} - .5 + rand(1)) / $drive{$baseline};
			}
		}

		if ($bike{$baseline} != 0 && $bike{$morning} != 0) {
			for $n (sort { $a <=> $b } keys(%bike)) {
				push @{$bikes{$n}}, ($bike{$n} - .5 + rand(1)) / $bike{$baseline};
			}
		}

		%walk = ();
		%drive = ();
		%bike = ();
		$okey = $key;
	}

	if ($time =~ /(..):(..) *- *(..):(..)/) {
		$time = $1 + $2 / 60;
		$time2 = $3 + $4 / 60;
	}

	if ($time2 == $time + .25) {
		$walk = $fields[12] + $fields[13] + $fields[14] + $fields[15];
		$walk{$time} = $walk;

		$bike = $fields[16] + $fields[17] + $fields[18] + $fields[19];
		$bike{$time} = $bike;

		for ($i = 0; $i < 12; $i++) {
			$drive{$time} += $fields[$i];
		}
	}
}

print "\@walk_scale = (\n";
for ($i = 0; $i < 24; $i++) {
	print "\t";
	for ($j = $i; $j < $i + 1; $j += .25) {
		@walks = sort { $a <=> $b } @{$walks{$j}};
		printf("%.6f, ", $walks[$#walks / 2]);
		push @outwalk, $walks[$#walks / 2];
	}
	print "\n";
}
print ");\n\n";

print "\@drive_scale = (\n";
for ($i = 0; $i < 24; $i++) {
	print "\t";
	for ($j = $i; $j < $i + 1; $j += .25) {
		@drives = sort { $a <=> $b } @{$drives{$j}};
		printf("%.6f, ", $drives[$#drives / 2]);
		push @outdrive, $drives[$#drives / 2];
	}
	print "\n";
}
print ");\n\n";

print "\@bike_scale = (\n";
for ($i = 0; $i < 24; $i++) {
	print "\t";
	for ($j = $i; $j < $i + 1; $j += .25) {
		@bikes = sort { $a <=> $b } @{$bikes{$j}};

		if ($#bikes < 50) {
			#push @bikes, @{$drives{$j}};
			push @bikes, @{$walks{$j}};

			@bikes = sort { $a <=> $b} @bikes;

			push @guess, 1;
		} else {
			push @guess, 0;
		}

		printf("%.6f, ", $bikes[$#bikes / 2]);
		push @outbike, $bikes[$#bikes / 2];
	}
	print "\n";
}
print ");\n\n";

exit(0);

for ($i = 0; $i <= $#outwalk; $i++) {
	print "$outdrive[$i], $outwalk[$i], $outbike[$i] $guess[$i]\n";
}
