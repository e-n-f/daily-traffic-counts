#!/usr/bin/perl

@walk_scale = (
	0.157309, 0.149394, 0.121197, 0.104131,
	0.083354, 0.083107, 0.068761, 0.103636,
	0.100915, 0.061588, 0.044027, 0.036112,
	0.032154, 0.029186, 0.031660, 0.023377,
	0.023250, 0.022508, 0.037596, 0.063072,
	0.049709, 0.064985, 0.117378, 0.184864,
	0.146697, 0.203423, 0.284622, 0.347598,
	0.470366, 0.518006, 0.604595, 0.727893,
	0.682208, 0.662761, 0.720298, 0.824428,
	0.712308, 0.656163, 0.750668, 0.715171,
	0.624865, 0.577683, 0.606514, 0.711005,
	0.748768, 0.741727, 0.839432, 0.948821,
	1.046687, 1.081846, 1.131881, 1.104790,
	0.968437, 0.908883, 0.849699, 0.938608,
	0.915993, 0.910356, 0.857723, 0.833536,
	0.898396, 0.957158, 0.946131, 0.976182,
	0.987302, 0.975945, 1.070743, 1.000000,
	1.048985, 0.978182, 0.988863, 0.964826,
	0.905608, 0.904176, 0.869242, 0.809445,
	0.744027, 0.667819, 0.639004, 0.631234,
	0.633107, 0.537512, 0.493708, 0.467328,
	0.484504, 0.493947, 0.446247, 0.366344,
	0.344546, 0.322038, 0.326738, 0.276775,
	0.260945, 0.247836, 0.221123, 0.200743,
);

@drive_scale = (
	0.108843, 0.095015, 0.081019, 0.073768,
	0.070077, 0.064930, 0.058990, 0.052533,
	0.055263, 0.048373, 0.041471, 0.036193,
	0.034990, 0.034605, 0.033884, 0.033902,
	0.035902, 0.045944, 0.062405, 0.076882,
	0.096451, 0.138623, 0.241458, 0.266707,
	0.288994, 0.390511, 0.514718, 0.596267,
	0.633383, 0.755670, 0.866324, 0.918379,
	0.806966, 0.765222, 0.722072, 0.706913,
	0.616872, 0.595871, 0.594403, 0.601779,
	0.596480, 0.599547, 0.592151, 0.612970,
	0.618375, 0.644965, 0.683761, 0.714590,
	0.741682, 0.734469, 0.737350, 0.749810,
	0.732377, 0.718570, 0.735305, 0.736948,
	0.739914, 0.751016, 0.767568, 0.774987,
	0.799616, 0.825960, 0.879520, 0.870504,
	0.915735, 0.930832, 0.982601, 1.000000,
	1.073234, 1.074136, 1.016522, 0.938575,
	0.846088, 0.821345, 0.742515, 0.675214,
	0.610313, 0.593155, 0.552536, 0.518420,
	0.457771, 0.440457, 0.415817, 0.389942,
	0.383151, 0.348027, 0.319649, 0.277086,
	0.286694, 0.270184, 0.242666, 0.209135,
	0.200972, 0.176623, 0.163288, 0.128499,
);

@bike_scale = (
	0.133076, 0.122204, 0.101108, 0.088949,
	0.076715, 0.074018, 0.063876, 0.078085,
	0.078089, 0.054981, 0.042749, 0.036152,
	0.033572, 0.031896, 0.032772, 0.028640,
	0.029576, 0.034226, 0.050001, 0.069977,
	0.073080, 0.101804, 0.179418, 0.225786,
	0.217846, 0.296967, 0.399670, 0.471932,
	0.478593, 0.657935, 0.871212, 0.946970,
	0.762997, 0.972727, 1.027190, 1.071104,
	0.911011, 0.864458, 0.814759, 0.806647,
	0.756061, 0.610860, 0.748494, 0.757530,
	0.595777, 0.556561, 0.584592, 0.728916,
	0.657056, 0.683735, 0.631024, 0.605422,
	0.698795, 0.642534, 0.784639, 0.776772,
	0.718417, 0.662100, 0.626506, 0.772590,
	0.811747, 0.868778, 0.750000, 0.911145,
	0.900602, 0.993976, 0.986446, 1.000000,
	1.175227, 1.260736, 1.160121, 1.154079,
	1.072093, 0.904651, 0.841981, 0.781395,
	0.677170, 0.630487, 0.595770, 0.574827,
	0.545439, 0.488985, 0.454763, 0.428635,
	0.433827, 0.420987, 0.382948, 0.321715,
	0.315620, 0.296111, 0.284702, 0.242955,
	0.230958, 0.212229, 0.192205, 0.164621,
);


$skip = 0;

for (my $i = 0; $i <= $#walk_scale; $i++) {
	$walk_sum += $walk_scale[$i];
}
for (my $i = 0; $i <= $#walk_scale; $i++) {
	$drive_sum += $drive_scale[$i];
}
for (my $i = 0; $i <= $#walk_scale; $i++) {
	$bike_sum += $bike_scale[$i];
}

my $walk_peak = 0;
for (my $i = 0; $i + 3 <= $#walk_scale; $i++) {
	my $p = $walk_scale[$i] + $walk_scale[$i + 1] + $walk_scale[$i + 2] + $walk_scale[$i + 3];
	if ($p > $walk_peak) {
		$walk_peak = $p;
		$walk_peak_when = $i;
	}
}

my $bike_peak = 0;
for (my $i = 0; $i + 3 <= $#bike_scale; $i++) {
	my $p = $bike_scale[$i] + $bike_scale[$i + 1] + $bike_scale[$i + 2] + $bike_scale[$i + 3];
	if ($p > $bike_peak) {
		$bike_peak = $p;
		$bike_peak_when = $i;
	}
}

my $drive_peak = 0;
for (my $i = 0; $i + 3 <= $#drive_scale; $i++) {
	my $p = $drive_scale[$i] + $drive_scale[$i + 1] + $drive_scale[$i + 2] + $drive_scale[$i + 3];
	if ($p > $drive_peak) {
		$drive_peak = $p;
		$drive_peak_when = $i;

		$walk_peak = $walk_scale[$i] + $walk_scale[$i + 1] + $walk_scale[$i + 2] + $walk_scale[$i + 3];
		$bike_peak = $bike_scale[$i] + $bike_scale[$i + 1] + $bike_scale[$i + 2] + $bike_scale[$i + 3];
	}
}

$time_peak = sprintf("%02d:%02d-%02d:%02d",
	int($drive_peak_when / 4), ($drive_peak_when % 4) * 15,
	int($drive_peak_when / 4 + 1), ($drive_peak_when % 4) * 15);

if ($ARGV[0] eq "-24") {
	$walk_peak = $walk_sum;
	$bike_peak = $bike_sum;
	$drive_peak = $drive_sum;
	$time_peak = "00:00-24:00";

	shift @ARGV;
}

sub out {
	if ($count[0] != 0 && !$skip) {
		print "$okey,$time_peak,";

		for ($i = 0; $i < 20; $i++) {
			printf("%.1f,", $sum[$i] / $count[$i]);
		}

		print "$where\n";
	}
}

while (<>) {
	chomp;
	($id, $name, $id2, $date, $time, @fields) = split(/,/);

	$key = "$id,$name,$id2,$date";

	if ($key ne $okey) {
		out();

		@sum = ();
		@count = ();
		$skip = 0;
	}

	if ($seen{"$key,$time"}) {
		print STDERR "duplicate $key,$time\n";
		$skip = 1;
		next;
	}
	$seen{"$key,$time"} = 1;

	if ($time =~ /(\d+):(\d\d) *- *(\d+):(\d\d)/) {
		$start = $1 * 60 + $2;
		$end = $3 * 60 + $4;
		$dur = $end - $start;

		if ($start >= 24 * 60 || $end > 24 * 60 || $start < 0 || $dur == 0) {
			print STDERR "Don't know what to do with time $time\n";
			next;
		}

		if ($start < 6 * 60) {
			print STDERR "Don't believe $key $time is really in the middle of the night\n";
			next;
		}

		for ($t = $start; $t < $end; $t += 15) {
			for ($i = 0; $i < 12; $i++) {
				if ($dur == 0 || $drive_scale[$t / 15] == 0) {
					print STDERR "$_\n";
				}
				$sum[$i] += $fields[$i] * 15 / $dur * $drive_sum / $drive_scale[$t / 15] * $drive_peak / $drive_sum;
				$count[$i]++;
			}
			$n = 0;
			for ($i = 12; $i < 16; $i++) {
				$sum[$i] += $fields[$i] * 15 / $dur * $walk_sum / $walk_scale[$t / 15] * $walk_peak / $walk_sum;
				$count[$i]++;
			}

			for ($i = 16; $i < 20; $i++) {
				$sum[$i] += $fields[$i] * 15 / $dur * $bike_sum / $bike_scale[$t / 15] * $bike_peak / $bike_sum;
				$count[$i]++;
			}
		}
	}

	$okey = $key;
	$where = "$fields[20],$fields[21]";
}

out();
