#!/usr/bin/perl

@walk_scale = (
	0.157309, 0.149394, 0.121197, 0.104131,
	0.083354, 0.083107, 0.068761, 0.103636,
	0.100915, 0.061588, 0.044027, 0.036112,
	0.032154, 0.029186, 0.031660, 0.023377,
	0.023250, 0.022508, 0.037596, 0.063072,
	0.049709, 0.064985, 0.117378, 0.184864,
	0.149621, 0.207510, 0.289772, 0.353796,
	0.468112, 0.515756, 0.605898, 0.730106,
	0.687625, 0.662257, 0.719477, 0.828758,
	0.717987, 0.658353, 0.753491, 0.719058,
	0.626197, 0.578460, 0.608915, 0.714072,
	0.751561, 0.744218, 0.837980, 0.952586,
	1.056698, 1.089410, 1.143224, 1.112418,
	0.977243, 0.916837, 0.852151, 0.945732,
	0.924036, 0.917115, 0.861271, 0.838184,
	0.898695, 0.960172, 0.942568, 0.979072,
	0.988629, 0.975194, 1.066701, 1.000000,
	1.047356, 0.979183, 0.991239, 0.966453,
	0.902888, 0.902407, 0.863525, 0.808754,
	0.746505, 0.666898, 0.639546, 0.630092,
	0.633155, 0.537488, 0.493184, 0.469085,
	0.486605, 0.496834, 0.448125, 0.368242,
	0.344546, 0.322038, 0.326738, 0.276775,
	0.260945, 0.247836, 0.221123, 0.200743,
);

@drive_scale = (
	0.110597, 0.096315, 0.082159, 0.074779,
	0.071158, 0.066004, 0.059894, 0.053268,
	0.055808, 0.049408, 0.042318, 0.036861,
	0.035227, 0.034875, 0.034422, 0.034090,
	0.036131, 0.046190, 0.062785, 0.076929,
	0.095302, 0.136978, 0.242496, 0.266737,
	0.289056, 0.390237, 0.516209, 0.596705,
	0.633587, 0.756278, 0.866768, 0.918569,
	0.807144, 0.765330, 0.721733, 0.707274,
	0.617128, 0.596158, 0.594090, 0.601708,
	0.597357, 0.600543, 0.594041, 0.614868,
	0.619671, 0.646030, 0.684405, 0.714786,
	0.741978, 0.735428, 0.738212, 0.750726,
	0.732752, 0.719850, 0.736592, 0.738316,
	0.741512, 0.752597, 0.770011, 0.777344,
	0.802173, 0.828705, 0.881834, 0.872441,
	0.916547, 0.931720, 0.982814, 1.000000,
	1.073914, 1.075236, 1.017163, 0.939298,
	0.845854, 0.823588, 0.745329, 0.677870,
	0.615642, 0.596884, 0.558126, 0.523633,
	0.465929, 0.447191, 0.425020, 0.395771,
	0.390463, 0.355724, 0.326465, 0.283846,
	0.289993, 0.273626, 0.245024, 0.211411,
	0.203618, 0.179719, 0.165562, 0.130618,
);

@bike_scale = (
	0.133953, 0.122855, 0.101678, 0.089455,
	0.077256, 0.074555, 0.064327, 0.078452,
	0.078361, 0.055498, 0.043172, 0.036487,
	0.033691, 0.032031, 0.033041, 0.028734,
	0.029690, 0.034349, 0.050191, 0.070000,
	0.072506, 0.100982, 0.179937, 0.225801,
	0.219338, 0.298873, 0.402990, 0.475250,
	0.469799, 0.653130, 0.857143, 0.908638,
	0.771812, 0.943522, 0.978477, 1.082919,
	0.885950, 0.856436, 0.785479, 0.836093,
	0.717608, 0.608264, 0.729373, 0.765677,
	0.596694, 0.552066, 0.591060, 0.739274,
	0.663894, 0.696370, 0.643564, 0.613861,
	0.651815, 0.606612, 0.773927, 0.773554,
	0.727880, 0.637730, 0.638614, 0.785479,
	0.801980, 0.831405, 0.754125, 0.882838,
	0.872937, 0.986799, 0.980198, 1.000000,
	1.200331, 1.253756, 1.195364, 1.163907,
	0.874371, 0.862997, 0.804427, 0.743312,
	0.681073, 0.631891, 0.598836, 0.576863,
	0.549542, 0.492339, 0.459102, 0.432428,
	0.438534, 0.426279, 0.387295, 0.326044,
	0.317270, 0.297832, 0.285881, 0.244093,
	0.232282, 0.213777, 0.193343, 0.165681,
);


$skip = 0;

for (my $i = 0; $i <= $#walk_scale; $i++) {
	$walk_sum += $walk_scale[$i];
}
for (my $i = 0; $i <= $#walk_scale; $i++) {
	$drive_sum += $drive_scale[$i];
}
for (my $i = 0; $i <= $#walk_scale; $i++) {
	$bike_sum += $bike_scale[$i];
}

my $walk_peak = 0;
for (my $i = 0; $i + 3 <= $#walk_scale; $i++) {
	my $p = $walk_scale[$i] + $walk_scale[$i + 1] + $walk_scale[$i + 2] + $walk_scale[$i + 3];
	if ($p > $walk_peak) {
		$walk_peak = $p;
		$walk_peak_when = $i;
	}
}

my $bike_peak = 0;
for (my $i = 0; $i + 3 <= $#bike_scale; $i++) {
	my $p = $bike_scale[$i] + $bike_scale[$i + 1] + $bike_scale[$i + 2] + $bike_scale[$i + 3];
	if ($p > $bike_peak) {
		$bike_peak = $p;
		$bike_peak_when = $i;
	}
}

my $drive_peak = 0;
for (my $i = 0; $i + 3 <= $#drive_scale; $i++) {
	my $p = $drive_scale[$i] + $drive_scale[$i + 1] + $drive_scale[$i + 2] + $drive_scale[$i + 3];
	if ($p > $drive_peak) {
		$drive_peak = $p;
		$drive_peak_when = $i;

		$walk_peak = $walk_scale[$i] + $walk_scale[$i + 1] + $walk_scale[$i + 2] + $walk_scale[$i + 3];
		$bike_peak = $bike_scale[$i] + $bike_scale[$i + 1] + $bike_scale[$i + 2] + $bike_scale[$i + 3];
	}
}

$time_peak = sprintf("%02d:%02d-%02d:%02d",
	int($drive_peak_when / 4), ($drive_peak_when % 4) * 15,
	int($drive_peak_when / 4 + 1), ($drive_peak_when % 4) * 15);

if ($ARGV[0] eq "-24") {
	$walk_peak = $walk_sum;
	$bike_peak = $bike_sum;
	$drive_peak = $drive_sum;
	$time_peak = "00:00-24:00";

	shift @ARGV;
}

sub out {
	if ($count[0] != 0 && !$skip) {
		print "$okey,$time_peak,";

		for ($i = 0; $i < 20; $i++) {
			printf("%.1f,", $sum[$i] / $count[$i]);
		}

		print "$where\n";
	}
}

while (<>) {
	chomp;
	($id, $name, $id2, $date, $time, @fields) = split(/,/);

	$key = "$id,$name,$id2,$date";
	$key1 = "$name,$id2,$date";

	if ($key ne $okey) {
		out();

		@sum = ();
		@count = ();
		$skip = 0;
	}

	if ($seen{"$key1,$time"}) {
		print STDERR "duplicate $key1,$time\n";
		$skip = 1;
		next;
	}
	$seen{"$key1,$time"} = 1;

	if ($time =~ /(\d+):(\d\d) *- *(\d+):(\d\d)/) {
		$start = $1 * 60 + $2;
		$end = $3 * 60 + $4;
		$dur = $end - $start;

		if ($start >= 24 * 60 || $end > 24 * 60 || $start < 0 || $dur == 0) {
			print STDERR "Don't know what to do with time $time\n";
			next;
		}

		if ($start < 6 * 60 && $end != 24 * 60) {
			print STDERR "Don't believe $key $time is really in the middle of the night\n";
			next;
		}

		$ds = 0;
		$ws = 0;
		$bs = 0;
		$n = 0;

		for ($t = $start; $t < $end; $t += 15) {
			$ds += $drive_scale[$t / 15];
			$ws += $walk_scale[$t / 15];
			$bs += $bike_scale[$t / 15];
			$n += 15;
		}

		{
			for ($i = 0; $i < 12; $i++) {
				$sum[$i] += $dur * ($fields[$i] / $dur) / ($ds / $n) * $drive_peak;
				$count[$i] += $dur;
			}
			for ($i = 12; $i < 16; $i++) {
				$sum[$i] += $dur * ($fields[$i] / $dur) / ($ws / $n) * $walk_peak;
				$count[$i] += $dur;
			}
			for ($i = 16; $i < 20; $i++) {
				$sum[$i] += $dur * ($fields[$i] / $dur) / ($bs / $n) * $bike_peak;
				$count[$i] += $dur;
			}
		}
	}

	$okey = $key;
	$where = "$fields[20],$fields[21]";
}

out();
